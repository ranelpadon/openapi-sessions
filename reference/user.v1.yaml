openapi: 3.0.0
info:
  title: user
  version: '1.0'
  description: API for User Signup/Signin
  contact:
    name: Magnetic Asia
    url: 'https://www.magneticasia.com/'
    email: info@magneticasia.com
  termsOfService: 'https://www.magneticasia.com/terms-conditions.html'
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
servers:
  - url: 'https://magneticasia.stoplight.io/mocks/magneticasia/openapi-sessions/165472'
    description: Stoplight Mock Server
tags:
  - name: User API
    description: User Signup/Signin
paths:
  /user/signup:
    post:
      summary: post-user-signup
      tags:
        - User API
      operationId: post-user-signup
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  first_name:
                    type: string
                    example: Alpha
                  last_name:
                    type: string
                    example: Bravo
                  access_token:
                    type: string
                    example: abcdefghijklmnopqrstuvwxyz
                  refresh_token:
                    type: string
                    example: abcdefghijklmnopqrstuvwxyz0123456789
              examples:
                example-1:
                  value:
                    first_name: Alpha
                    last_name: Bravo
                    access_token: abcdefghijklmnopqrstuvwxyz
                    refresh_token: abcdefghijklmnopqrstuvwxyz0123456789
                example-2:
                  value:
                    first_name: Alpha
                    last_name: Bravo
                    access_token: abcdefghijklmnopqrstuvwxyz
                    refresh_token: abcdefghijklmnopqrstuvwxyz0123456789
          headers: {}
      description: Create user.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: alpha@bravo.com
                first_name:
                  type: string
                  example: Alpha
                last_name:
                  type: string
                  example: Bravo
                password:
                  type: string
                  format: password
                  example: alpha_bravo
                opt_in:
                  type: boolean
              required:
                - email
                - first_name
                - last_name
                - password
                - opt_in
            examples:
              example-1:
                value:
                  email: alpha@bravo.com
                  first_name: Alpha
                  last_name: Bravo
                  password: alpha_bravo
                  opt_in: true
        description: User signup data.
      security: []
    parameters: []
  /user/signin:
    post:
      summary: post-user-signin
      tags:
        - User API
      operationId: post-user-signin
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  first_name:
                    type: string
                    example: Alpha
                  last_name:
                    type: string
                    example: Bravo
                  email:
                    type: string
                    format: email
                    example: alpha@bravo.com
                  access_token:
                    type: string
                    example: abcdefghijklmnopqrstuvwxyz
                  refresh_token:
                    type: string
                    example: abcdefghijklmnopqrstuvwxyz0123456789
              examples:
                example-1:
                  value:
                    first_name: Alpha
                    last_name: Bravo
                    email: alpha@bravo.com
                    access_token: abcdefghijklmnopqrstuvwxyz
                    refresh_token: abcdefghijklmnopqrstuvwxyz0123456789
      description: Login user.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: alpha@bravo.com
                password:
                  type: string
                  format: password
                  example: alpha_bravo
              required:
                - email
                - password
        description: User signin data.
  /user/check:
    post:
      summary: post-user-check
      tags:
        - User API
      operationId: post-user-check
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
                    example: true
              examples:
                example-1:
                  value:
                    exists: true
                example-2:
                  value:
                    exists: false
      description: Check if user exists.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: alpha@bravo.com
              required:
                - email
          application/xml:
            schema:
              type: object
              properties: {}
          multipart/form-data:
            schema:
              type: object
              properties: {}
        description: User check data.
      security: []
    parameters: []
  /user/me:
    get:
      summary: post-user-detail
      tags:
        - User API
      operationId: get-user-detail
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  first_name:
                    type: string
                    example: Alpha
                  last_name:
                    type: string
                    example: Bravo
                  email:
                    type: string
                    format: email
                  '':
                    type: object
                required:
                  - first_name
                  - last_name
                  - email
              examples:
                example-1:
                  value:
                    first_name: Alpha
                    last_name: Bravo
                    email: alpha@bravo.com
      description: Get the user details.
    parameters: []
security:
  - BearerAuth: []
components:
  schemas: {}
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      description: JWT
